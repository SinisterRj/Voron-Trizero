#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
#step_pin: ercf:gpio7
## Refer to https://docs.vorondesign.com/build/startup/#v0
#dir_pin: ercf:gpio8                                                   # Check motor direction in link above. If inverted, add a ! before gpio10
#enable_pin: !ercf:gpio6
# Extruder da pico 2

step_pin: pico2:gpio14
dir_pin: pico2:gpio13                                                    # Remove the ! before gpio28 if motor direction is inverted.
enable_pin: !pico2:gpio15

rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9째 degree stepper motor, 200 is for 1.8째 stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 119.5
position_max: 119.5
homing_speed: 20                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
#uart_pin: ercf:gpio9
uart_pin: pico2:gpio9
tx_pin: pico2:gpio8
uart_address: 3

interpolate: False
run_current: 1.06 ;0.95 #0.85            
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
#diag_pin: ^ercf:gpio23   												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
diag_pin: ^pico2:gpio16   												
#driver_SGTHRS: 45  												# this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[autotune_tmc stepper_x]
motor: moons-ms14hs5p4150
tuning_goal: performance
sg4_thrs: 58 #45 #45

[stepper_y]
# Z1 da pico 2
#step_pin: ercf:gpio2
step_pin: pico2:gpio19
## Refer to https://docs.vorondesign.com/build/startup/#v0
#dir_pin: ercf:gpio1  
dir_pin: pico2:gpio28 
# Check motor direction in link above. If inverted, add a ! before gpio5
#enable_pin: !ercf:gpio3
enable_pin: !pico2:gpio2
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9째 degree stepper motor, 200 is for 1.8째 stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
position_min: 0
homing_speed: 20                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
#uart_pin: ercf:gpio0
uart_pin: pico2:gpio9
tx_pin: pico2:gpio8
uart_address: 1

interpolate: False
run_current: 1.06 ;0.95 #0.85
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
#diag_pin: ^ercf:gpio22   												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
diag_pin: ^pico2:gpio25   
#driver_SGTHRS: 45  

[autotune_tmc stepper_y]
motor: moons-ms14hs5p4150
tuning_goal: performance
sg4_thrs: 46 #48 #56 #60 #45 

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: gpio19
dir_pin: gpio28                                                    # Remove the ! before gpio28 if motor direction is inverted.
enable_pin: !gpio2
rotation_distance: 32                                               
microsteps: 128 #64
endstop_pin: ^gpio25
position_endstop: 0.5 #4.8 #5.256
position_max: 111
position_min: -1.5
homing_speed: 20
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
interpolate: False
run_current: 0.4 #0.2
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

[stepper_z1]
step_pin: gpio11
dir_pin: !gpio10                                                    # Remove the ! before gpio28 if motor direction is inverted.
enable_pin: !gpio12
rotation_distance: 32                                               
microsteps: 128 #64

[tmc2209 stepper_z1]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
interpolate: False
run_current: 0.4 #0.2
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

[stepper_z2]
step_pin: gpio6
dir_pin: !gpio5                                                    # Remove the ! before gpio28 if motor direction is inverted.
enable_pin: !gpio7
rotation_distance: 32                                               
microsteps: 128 #64

[tmc2209 stepper_z2]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
interpolate: False
run_current: 0.4 #0.2
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

